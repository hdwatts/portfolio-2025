---
import { getCollection } from "astro:content";
import Layout from "../../../layouts/Layout.astro";
import Theme from "../../../layouts/Theme.astro";
import { TypographyH1 } from "../../../components/blog/Typography";
import { Tag as TagIcon } from "lucide-react";
import PostList from "../../../components/blog/PostList.astro";
import ReturnToBlog from "../../../components/blog/ReturnToBlog.astro";

export async function getStaticPaths() {
	const posts = (await getCollection("blog")).filter(
		(post) => post.data.isPublished || import.meta.env.DEV,
	);
	const postsByTag = posts.reduce<Record<string, typeof posts>>(
		(acc, post) => {
			for (const _tag of post.data.tags) {
				const tag = encodeURIComponent(_tag.toLowerCase());
				if (!acc[tag]) {
					acc[tag] = [];
				}
				acc[tag].push(post);
			}
			return acc;
		},
		{},
	);
	return Object.keys(postsByTag).map((tag) => ({
		params: { tag },
		props: { tag, posts },
	}));
}
const capitalizeFirstLetter = (val: string) => {
	return String(val).charAt(0).toUpperCase() + String(val).slice(1);
};

const { posts, tag } = Astro.props;
---

<Theme />
<Layout
	title={`Posts Tagged ${capitalizeFirstLetter(decodeURIComponent(tag))}`}
>
	<div class="flex w-full max-w-[900px] flex-col justify-between px-12">
		<ReturnToBlog />
		<div class="mb-4 flex items-center gap-4 border-b py-4">
			<div><TagIcon width={28} height={28} /></div>
			<TypographyH1>{decodeURIComponent(tag)}</TypographyH1>
		</div>
		<div class="min-h-[400px]">
			<PostList posts={posts} />
		</div>
	</div>
</Layout>
