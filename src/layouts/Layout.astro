---
type Props = {
	title: string;
	description?: string;
	image?: ImageMetadata;
	articleDate?: string;
};
import Analytics from "@vercel/analytics/astro";
import { CodeXml } from "lucide-react";
import BaseHead from "../components/BaseHead.astro";
import { Search } from "../components/Search";
const { title, description, image, articleDate } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead
			title={title}
			description={description}
			ogImage={image}
			articleDate={articleDate}
		/>
	</head>
	<body class="bg-background">
		<header
			class="border-grid bg-background/95 supports-[backdrop-filter]:bg-background/60 sticky top-0 z-50 mb-10 w-full border-b backdrop-blur"
		>
			<div class="container-wrapper flex items-center justify-center">
				<div class="container flex h-14 items-center px-5">
					<div
						class="flex w-full justify-between gap-4 sm:justify-start"
					>
						<a class="flex items-center gap-2" href="/">
							<CodeXml />
							<span class="font-bold">HDWATTS</span>
						</a>
						<nav class="flex items-center gap-4 text-sm">
							<a
								class="opacity-80 transition-opacity hover:opacity-100"
								href="/">Home</a
							>
							<a
								class="opacity-80 transition-opacity hover:opacity-100"
								href="/blog">Blog</a
							>
							<a
								class="opacity-80 transition-opacity hover:opacity-100"
								href="/photography">Photography</a
							>
							<!-- <a
								class="opacity-80 transition-opacity hover:opacity-100"
								target="_blank"
								href="/resume.pdf">Resume</a
							> -->
						</nav>
						<Search client:load />
					</div>
				</div>
			</div>
		</header>
		<div class="flex justify-center">
			<main class="flex w-full flex-col items-center gap-6 md:gap-12">
				<slot />
			</main>
		</div>
		<footer class="mt-10 flex h-14 w-full justify-center text-sm">
			Â© hdwatts, 2025
		</footer>
		<Analytics />
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}
	html {
		scrollbar-gutter: stable;
	}
</style>

<style is:global>
	@keyframes bump {
		0% {
			transform: scale(1);
		}
		50% {
			transform: scale(1.1);
		}
		100% {
			transform: scale(1);
		}
	}
</style>
